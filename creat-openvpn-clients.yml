- hosts: vpn-server
  gather_facts: false
  vars_files:
    - vars_files/var_file_strings.yml
  tasks:
    - name: Check if pki/private/client.key exists
      stat:
        path: /{{ vpn_server_user_access }}/pki/private/{{ item.ovpn_client_name }}.key
      with_items:
        - "{{ ovpn_clients_vars }}"
      register: clikey
    - name: Create client request
      expect:
        command: sh /{{ vpn_server_user_access }}/easy-rsa/easyrsa gen-req "{{ item.item.ovpn_client_name }}" pass
        responses:
          'Enter PEM pass phrase': '{{ item.item.ovpn_client_pass }}'
          'Verifying - Enter PEM pass phrase': '{{ item.item.ovpn_client_pass }}'
          'Common Name': '{{ item.item.common_name }}'
      with_items:
        - "{{ clikey.results }}"
      when: item.stat.exists == False
    - name: Check if pki/issued/client.crt exists
      stat:
        path: /{{ vpn_server_user_access }}/pki/issued/{{ item.ovpn_client_name }}.key
      with_items:
        - "{{ ovpn_clients_vars }}"
      register: clicrt
    - name: Run easyrsa script with client's sign-req
      expect:
        command: sh /{{ vpn_server_user_access }}/easy-rsa/easyrsa sign-req client {{ item.item.ovpn_client_name }}
        responses:
          'Confirm': 'yes'
      with_items: 
        - "{{ clicrt.results }}"
      when: item.stat.exists == False
    - name: Copy ca.crt to /etc/openvpn/client
      copy:
        src: /{{ vpn_server_user_access }}/pki/ca.crt
        dest: /etc/openvpn/client
        remote_src: yes
    - name: Copy pki/issued/clients certs to /etc/openvpn/client
      copy:
        src: /{{ vpn_server_user_access }}/pki/issued/{{ item.ovpn_client_name }}.crt
        dest: /etc/openvpn/client
        remote_src: yes
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Copy pki/private/clients keys to /etc/openvpn/client
      copy:
        src: /{{ vpn_server_user_access }}/pki/private/{{ item.ovpn_client_name }}.key
        dest: /etc/openvpn/client
        remote_src: yes
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Check if client folder exists
      stat:
        path: /etc/openvpn/{{ item.ovpn_client_name }}
      with_items:
        - "{{ ovpn_clients_vars }}"
      register: ovpncliefolder
    - name: Create client folder
      file:
        path: /etc/openvpn/{{ item.item.ovpn_client_name }}
        state: directory
        mode: '755'
      with_items: 
        - "{{ ovpncliefolder.results }}"
      when: item.stat.exists == False
    - name: Check if client.conf exists
      stat:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
      with_items:
        - "{{ ovpn_clients_vars }}"
      register: ovpnclieconf
    - name: Delete client.conf
      file:
        path: /etc/openvpn/{{ item.item.ovpn_client_name }}/{{ item.item.ovpn_client_name }}.conf
        state: absent
      with_items:
        - "{{ ovpnclieconf.results }}"
      when: item.stat.exists == False
    - name: Create client.conf
      file:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        state: touch
        mode: '755'
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Configure client
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: client
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Configure network device
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: dev {{ vpn_server_dev }}
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Configure protocol
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: proto {{ vpn_server_proto }}
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Configure vpn server access IP address and port
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: remote {{ vpn_server_ip }} {{ vpn_server_port }}
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Configure resolv-retry
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: resolv-retry {{ item.vpn_client_res_ret }}
      with_items: 
        - "{{ ovpn_clients_vars }}"    
    - name: Configure bind
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: "{{ item.vpn_client_bind }}"
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Configure user
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: user {{ vpn_server_user }}
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Configure group
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: group {{ vpn_server_group }}
      with_items: 
        - "{{ ovpn_clients_vars }}"        
    - name: Configure persist-key
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: persist-key
      with_items: 
        - "{{ ovpn_clients_vars }}" 
    - name: Configure persist-tun
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: persist-tun
      with_items: 
        - "{{ ovpn_clients_vars }}" 
    - name: Configure ca.crt
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: ca ca.crt        
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Configure client.crt
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: cert {{ item.ovpn_client_name }}.crt
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Configure client.key
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: key {{ item.ovpn_client_name }}.key
      with_items: 
        - "{{ ovpn_clients_vars }}"     
    - name: Configure remote-cert-tls
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: remote-cert-tls server
      with_items: 
        - "{{ ovpn_clients_vars }}"    
    - name: Configure tls-auth
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: tls-auth ta.key 1
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Configure cipher
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: cipher {{ vpn_server_cipher }} 
      with_items: 
        - "{{ ovpn_clients_vars }}" 
    - name: Configure verb
      lineinfile:
        path: /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf
        line: verb {{ vpn_server_verb }}
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Create clients directories
      file:
        path: /etc/openvpn/{{ item.ovpn_client_name }}
        state: directory
        mode: '0755'
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Copy ca.crt to client folder
      copy:
        src: /etc/openvpn/client/ca.crt
        dest: /etc/openvpn/{{ item.ovpn_client_name }}
        remote_src: yes
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Copy ta.key to client folder
      copy:
        src: /etc/openvpn/ta.key
        dest: /etc/openvpn/{{ item.ovpn_client_name }}
        remote_src: yes
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Copy client.crt to client folder
      copy:
        src: /etc/openvpn/client/{{ item.ovpn_client_name }}.crt
        dest: /etc/openvpn/{{ item.ovpn_client_name }}
        remote_src: yes
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Copy client.key to client folder
      copy:
        src: /etc/openvpn/client/{{ item.ovpn_client_name }}.key
        dest: /etc/openvpn/{{ item.ovpn_client_name }}
        remote_src: yes
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - name: Check if ovpn file exists
      stat:
        path: /etc/openvpn/{{ item.ovpn_client_name }}.ovpn
      with_items:
        - "{{ ovpn_clients_vars }}"
      register: ovpnfile
    - name: Delete ovpn file
      file:
        path: /etc/openvpn/{{ item.itme.ovpn_client_name }}.ovpn
        status: absent
      with_items: 
        - "{{ ovpnfile.results }}"
      when: item.stat.exists == True
    - name: Create ovpn file - works, looks not so good
      shell: cat /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.conf > /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - shell: echo '<ca>' >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"    
    - shell: cat /etc/openvpn/{{ item.ovpn_client_name }}/ca.crt >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"    
    - shell: echo '</ca>' >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"    
    - shell: echo '<cert>' >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - shell: cat /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.crt >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - shell: echo '</cert>' >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - shell: echo '<key>' >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"    
    - shell: cat /etc/openvpn/{{ item.ovpn_client_name }}/{{ item.ovpn_client_name }}.key >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"    
    - shell: echo '</key>' >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"    
    - shell: echo '<tls-auth>' >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - shell: cat /etc/openvpn/{{ item.ovpn_client_name }}/ta.key >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars }}"
    - shell: echo '</tls-auth>' >> /etc/openvpn/{{ item.ovpn_client_name}}/{{ item.ovpn_client_name }}.ovpn
      with_items: 
        - "{{ ovpn_clients_vars}}"    